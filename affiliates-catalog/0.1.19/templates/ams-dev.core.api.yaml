apiVersion: v1
kind: ConfigMap
metadata:
  name: ams-dev-conf
  namespace: ams-dev-helm
data:
  appSettings.json: |
    {
      "Jwt": {
        "Secret": "superreliablesecretEVER!",
        "ExpirationIn": "08:00:00",
        "Issuer": "AMS",
        "Audience": "api://ams"
      },
      "Bus": {
        "Host": "rabbitmq://rabbitmq/",
        "Queue": "xcritical-crm-affiliates",
        "TemporaryQueue": "xcritical-temp",
        "Username": "guest",
        "Password": "guest"
      },
      "Database": {
        "ConnectionString": "Data Source=db;user id=sa;password=ZKa6uG7vRlwlP6x;Initial Catalog=AffiliatesDB;Integrated Security=False;Connection Timeout=20"
      },
      "Serilog": {
        "Using": [ "Serilog.Sinks.Literate" ],
        "MinimumLevel": {
          "Default": "Information",
          "Override": {
            "Microsoft": "Warning",
            "System": "Warning"
          }
        },
        "WriteTo": [
          {
            "Name": "File",
            "Args": { "path": "%ALLUSERSPROFILE%\\XCritical\\Logs\\XCritical.Affiliates.log" }
          },
          {
            "Name": "LiterateConsole"
          }
        ],
        "Enrich": [ "FromLogContext" ],
        "Properties": { "Application": "XCritical.Affiliates" }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ams-dev-helm
  name: affiliate-system-api
spec:
  selector:
    matchLabels:
      app: affiliate-system-api
      tier: stackserver
      track: develop
  replicas: 1
  template:
    metadata:
      labels:
        app: affiliate-system-api
        tier: stackserver
        track: develop
    spec:
      containers:
        - name: affiliate-system-api
          image: "{{ template "affiliates.api" . }}"
          imagePullPolicy: {{ .Values.api.pullPolicy | quote }}
          workingDir: /var/ams.core.api/
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
          - name: config
            mountPath: /var/ams.core.api/appSettings.json
            subPath: appSettings.json
          readinessProbe:
            httpGet:
              path: /version
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /version
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 15
      volumes:
      - name: config
        configMap:
          name: ams-dev-conf
---
apiVersion: v1
kind: Service
metadata:
  name: affiliate-system-api
  namespace: ams-dev-helm
  labels:
    app: affiliate-system-api
spec:
  selector:
    app: affiliate-system-api
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: 80
    nodePort: 32181
    protocol: TCP
